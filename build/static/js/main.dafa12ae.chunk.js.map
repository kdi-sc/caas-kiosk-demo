{"version":3,"sources":["registerServiceWorker.js","modules/Cart/action.js","modules/Cart/cart.js","modules/Filters/action.js","modules/Filters/filterOptions.js","modules/Filters/FilterMenu.js","modules/Menu/menuItem.js","modules/Menu/menuItemList.js","modules/Dashboard/action.js","modules/Dashboard/Dashboard.js","shared/api.js","App.js","shared/routes.js","shared/store.js","modules/Dashboard/reducer.js","modules/Cart/reducer.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","addItemToSelection","response","type","payload","removeItemToSelection","checkoutCurrentOrder","initialstate","checkoutAlert","Cart","props","context","checkout","setState","removeItemFromCart","idx","arr","selectedItems","splice","total","summaryJsx","this","map","item","index","discountPrice","key","className","onClick","e","name","length","Component","connect","CartReducer","selection","dispatch","bindActionCreators","actions","filterMenu","FilterOptions","htmlFor","autoFocus","placeholder","value","filterNameText","onChange","handleFilteration","filterCategoryText","filterRatingText","filterPriceText","allItems","filteredItems","FilterMenu","event","ops","filterText","target","array","filter","obj","ok","categoryName","forEach","items","rating","finalPrice","calculatePrice","price","discount","split","toLowerCase","search","filterItems","op","d","Number","nextProps","JSON","parse","stringify","DashboardReducer","MenuItem","data","addToCart","starCount","ingredients","toString","MenuItemList","addToSelection","menuItemMarkup","menu","itemsInMenu","id","loadFoodItems","Dashboard","axios","get","filterActions","App","class","href","title","Routes","exact","path","component","rootReducer","combineReducers","action","Object","assign","middleware","createLogger","collapsed","composedEnhancers","compose","applyMiddleware","store","createStore","_app_container","document","getElementById","render","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dafa12ae.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export function addItemToSelection(response) {\n    return { type: 'ADD_ITEMS', payload: response };\n}\n\nexport function removeItemToSelection(response) {\n    return { type: 'REMOVE_ITEMS', payload: response };\n}\n\nexport function checkoutCurrentOrder(response) {\n    return { type: 'CHECKOUT_AND_RESET_SELECTION', payload: response };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from './action';\n\nconst initialstate = {\n    checkoutAlert: false\n};\nclass Cart extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = initialstate;\n    }\n\n    checkout = () => {\n        this.setState({\n            checkoutAlert: true\n        });\n        this.props.checkoutCurrentOrder();\n    }\n\n    removeItemFromCart = (idx) => {\n        let arr = [...this.props.selectedItems];\n        arr.splice(idx, 1);\n        this.props.removeItemFromCart(arr);\n    }\n\n    render() {\n        let total = 0.0;\n        let summaryJsx = this.props.selectedItems && this.props.selectedItems.map((item, index) => {\n            total += item.discountPrice;\n            return (\n                <tr key={index}>\n                    <td>\n                        <span className=\"btn-remove\" onClick={e => this.removeItemFromCart(index)} >{'x'}</span>\n                    </td>\n                    <td>\n                        {item.name}\n                    </td>\n                    <td>{' X '}</td>\n                    <td>\n                        {'$' + item.discountPrice}\n                    </td>\n                    <td>{' = '}</td>\n                    <td>\n                        <b>\n                            {'$' + item.discountPrice}\n                        </b>\n                    </td>\n                </tr>\n            );\n        });\n        return (\n            <div>\n                {this.props.selectedItems && this.props.selectedItems.length > 0 && (\n                    <div className=\"cart-container\">\n                        <div className=\"card-title\">\n                            {'ORDER SUMMARY'}\n                        </div>\n                        <br />\n                        <table className=\"table table-striped\">\n                            <tbody>\n                                {summaryJsx}\n                            </tbody>\n                        </table>\n                        <br />\n                        <div className=\"cart-total\">\n                            {'Total: $' + total}\n                        </div>\n                        <button onClick={e => this.checkout()}>CHECKOUT</button>\n                    </div>\n                )}\n                {this.state.checkoutAlert && (\n                    <div className=\"cart-container\">\n                        <div className=\"success\">\n                            {'Your order is on it\\'s way and will be delivered in 30 minutes.'}\n                        </div>\n                        <button onClick={e => this.setState({\n                            checkoutAlert: false\n                        })}>PLACE NEW ORDER</button>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        selectedItems: state.CartReducer.selection\n    };\n}\n\n//  Set the actions which will prompt the reducers to check for matching types\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        removeItemFromCart: actions.removeItemToSelection,\n        checkoutCurrentOrder: actions.checkoutCurrentOrder\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","export function filterMenu(response) {\n    return { type: 'FILTER_ITEMS', payload: response };\n}\n","import React from 'react';\n\nconst FilterOptions = (props) => {\n  return (\n    <div className=\"row\">\n      <div className=\"col col-xs-3 col-md-3\">\n        <label htmlFor=\"namefilter\" className=\"pull-left\">Name:</label>\n        <input name=\"namefilter\" type=\"text\" autoFocus placeholder=\"Search\" className=\"inputBox\" value={props.filterNameText ? props.filterNameText : ''} onChange={e => props.handleFilteration(e, 'name')} />\n      </div>\n      <div className=\"col col-xs-3 col-md-3\">\n        <label htmlFor=\"categoryfilter\" className=\"pull-left\">Category:</label>\n        <select name=\"categoryfilter\" className=\"inputBox\" value={props.filterCategoryText ? props.filterCategoryText : ''} onChange={e => props.handleFilteration(e, 'category')}>\n          <option value=\"\">{'All'}</option>\n          <option value=\"Burgers\">{'Burgers'}</option>\n          <option value=\"Sandwiches\">{'Sandwiches'}</option>\n          <option value=\"Pizzas\">{'Pizzas'}</option>\n          <option value=\"Drinks\">{'Drinks'}</option>\n        </select>\n      </div>\n      <div className=\"col col-xs-3 col-md-3\">\n        <label htmlFor=\"ratingfilter\" className=\"pull-left\">Rating:</label>\n        <select name=\"ratingfilter\" className=\"inputBox\" value={props.filterRatingText ? props.filterRatingText : ''} onChange={e => props.handleFilteration(e, 'rating')}>\n          <option value=\"\">{'All'}</option>\n          <option value=\"1\">{'★'}</option>\n          <option value=\"2\">{'★★'}</option>\n          <option value=\"3\">{'★★★'}</option>\n          <option value=\"4\">{'★★★★'}</option>\n          <option value=\"5\">{'★★★★★'}</option>\n        </select>\n      </div>\n      <div className=\"col col-xs-3 col-md-3\">\n        <label htmlFor=\"pricefilter\" className=\"pull-left\">Price:</label>\n        <select name=\"pricefilter\" className=\"inputBox\" value={props.filterPriceText ? props.filterPriceText : ''} onChange={e => props.handleFilteration(e, 'price')}>\n          <option value=\"\">{'All'}</option>\n          <option value=\"0,10\">{'$0 - $10'}</option>\n          <option value=\"20,30\">{'$20 - $30'}</option>\n          <option value=\"30,40\">{'$30 - $40'}</option>\n          <option value=\"40,50\">{'$40 - $50'}</option>\n          <option value=\"50,\">{'$50+'}</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterOptions;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from './action.js';\nimport FilterOptions from \"./filterOptions\";\n\nconst initialstate = {\n    allItems: [],\n    filteredItems: [],\n    filterNameText: '',\n    filterCategoryText: '',\n    filterRatingText: '',\n    filterPriceText: ''\n};\nclass FilterMenu extends Component {\n\n    constructor(props, context) {\n        super(props, context);\n        this.state = initialstate;\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.items && nextProps.items.length > 0) {\n            this.setState({\n                allItems: JSON.parse(JSON.stringify(nextProps.items)),\n                filteredItems: JSON.parse(JSON.stringify(nextProps.filteredItems))\n            });\n        }\n    }\n\n    handleFilteration = (event, ops) => {\n        const filterText = event.target.value;\n        let filterCategoryText = this.state.filterCategoryText;\n        let filterRatingText = this.state.filterRatingText;\n        let filterNameText = this.state.filterNameText;\n        let filterPriceText = this.state.filterPriceText;\n        let array = [...this.state.allItems] || [];\n        if (ops === 'category') {\n            filterCategoryText = filterText;\n        } else if (ops === 'rating') {\n            filterRatingText = filterText;\n        } else if (ops === 'price') {\n            filterPriceText = filterText;\n        } else {\n            filterNameText = filterText;\n        }\n        // category filter\n        array = array.filter((obj) => {\n            let ok = true;\n\n            if (filterCategoryText !== '') {\n                ok = (obj.categoryName === filterCategoryText);\n            }\n\n            return ok;\n        });\n        // other filters\n        array.forEach((obj, idx) => {\n            let filteredItems = obj.items.filter((item) => {\n                let ok = true;\n\n                if (ok && filterRatingText !== '') {\n                    ok = item.rating === filterRatingText;\n                }\n\n                if (ok && filterPriceText !== '') {\n                    const finalPrice = this.calculatePrice(item.price, item.discount);\n                    ok = (finalPrice > filterPriceText.split(\",\")[0] && (filterPriceText.split(\",\")[1] && finalPrice <= filterPriceText.split(\",\")[1]));\n                }\n\n                if (ok && filterNameText !== '') {\n                    ok = (item.name.toLowerCase().search(filterNameText.toLowerCase()) > -1);\n                }\n                return ok;\n            });\n            obj.items = filteredItems;\n            array[idx] = obj;\n        });\n        // set State\n        this.setState({ filterNameText, filterCategoryText, filterRatingText, filterPriceText, filteredItems: array });\n        this.props.filterItems(array);\n    }\n\n    calculatePrice = (op, d) => {\n        return (op - (Number(op) * Number(d) / 100));\n    }\n\n\n    render() {\n        return (\n            <FilterOptions\n                filterCategoryText={this.state.filterCategoryText}\n                filterRatingText={this.state.filterRatingText}\n                filterNameText={this.state.filterNameText}\n                filterPriceText={this.state.filterPriceText}\n                handleFilteration={this.handleFilteration}\n            />\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        items: state.DashboardReducer.items,\n        filteredItems: state.DashboardReducer.filteredItems\n    };\n}\n\n//  Set the actions which will prompt the reducers to check for matching types\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        filterItems: actions.filterMenu\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FilterMenu);","import React from 'react';\nimport StarRatingComponent from 'react-star-rating-component';\n\nconst MenuItem = ({ data, addToCart }) => {\n    const op = Number(data.price);\n    const d = Number(data.discount);\n    let finalPrice = op - (Number(op) * Number(d) / 100);\n    data.discountPrice = finalPrice;\n    return (\n        <div className=\"col-xs-12 col-md-12 card-container\">\n            <div className=\"card\">\n                <div className=\"card-block\">\n                    <span className=\"card-title\">{data.name}</span>\n                    <br />\n                    <StarRatingComponent\n                        name=\"rating\"\n                        starCount={5}\n                        value={Number(data.rating)}\n                    />\n                    <br />\n                    {data.discount > 0 ? (\n                        <div>\n                            {'Price - '}\n                            {/* <span className=\"card-price original-price\">{'₹' + data.price}</span> */}\n                            \n                            <span className=\"card-price discounted-price\">{'$' + finalPrice}</span>\n                        </div>\n                    ) : (\n                            <span className=\"card-price\">{'Price - $' + data.price}</span>\n                        )}\n                    <hr />\n                    <span className=\"ingredients\">{'Ingredients: ' + data.ingredients.toString()}</span>\n                </div>\n            </div>\n            <button onClick={e => addToCart(data)}>ADD</button>\n        </div>\n    );\n};\n\nexport default MenuItem;\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../Cart/action';\nimport MenuItem from './menuItem';\n\nclass MenuItemList extends Component {\n    addToSelection = (data) => {\n        const { addItemToSelection } = this.props;\n\n        addItemToSelection([...this.props.selectedItems, data]);\n    }\n\n    render() {\n        const { filteredItems } = this.props;\n\n        let menuItemMarkup = filteredItems && filteredItems.map((menu, index) => {\n            let itemsInMenu = menu && menu.items.map(data => <MenuItem\n                data={data}\n                key={data.id}\n                addToCart={this.addToSelection}\n            />\n            );\n\n            return (\n                <div key={index} className=\"col-lg-3 col-md-3 col-sm-6 col-xs-12\">\n                    <h2 className=\"category\">\n                        {menu.categoryName}\n                    </h2>\n                    {itemsInMenu}\n                </div>\n            );\n        });\n\n        return (<Fragment>\n            {menuItemMarkup}\n        </Fragment>);\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        filteredItems: state.DashboardReducer.filteredItems,\n        selectedItems: state.CartReducer.selection\n    };\n}\n\n//  Set the actions which will prompt the reducers to check for matching types\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        addItemToSelection: actions.addItemToSelection\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuItemList);","export function loadFoodItems(response) {\n    return { type: 'LOAD_FOOD_ITEMS', payload: response };\n}\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as api from '../../shared/api.js';\nimport Cart from '../Cart/cart';\nimport * as filterActions from '../Filters/action';\nimport FilterMenu from \"../Filters/FilterMenu\";\nimport MenuItemList from '../Menu/menuItemList';\nimport * as actions from './action.js';\n\nclass Dashboard extends Component {\n    componentDidMount() {\n        api.getAllItems()\n        .then((response) => {\n            const items = response.data;\n            this.props.loadFoodItems(items.menu);\n            this.props.filterMenu(items.menu);\n        })\n        .catch(error => {\n            console.log(error);\n            this.props.loadFoodItems([]);\n            this.props.filterMenu([]);\n        });\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <div className=\"col col-md-12 col-xs-12 filter-container\">\n                    <FilterMenu />\n                </div>\n                <div className=\"col col-md-9 col-xs-8 menu-container\">\n                    <MenuItemList />\n                </div>\n                <div className=\"col col-md-3 col-xs-4 summary-container\">\n                    <Cart />\n                </div>\n            </Fragment>\n        );\n    }\n}\n\n//  Set the actions which will prompt the reducers to check for matching types\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        loadFoodItems: actions.loadFoodItems,\n        filterMenu: filterActions.filterMenu\n    }, dispatch);\n}\n\nexport default connect(null, mapDispatchToProps)(Dashboard);","import axios from 'axios';\n\nexport function getAllItems() {\n    return axios.get('https://content-hub-cdn.azureedge.net/wawa-menu-34058.json');\n}","import React, { Component } from 'react';\nimport Dashboard from './modules/Dashboard/Dashboard';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div className=\"jumbotron\">\n                <a class=\"logo\" href=\"/\" title=\"Wawa Logo\">&nbsp;</a>\n            </div>\n        <Dashboard />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport App from '../App';\n\nconst Routes = () => (\n    <div>\n        <main>\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n            </Switch>\n        </main>\n    </div>\n);\n\nexport default Routes;","import { applyMiddleware, compose, createStore, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport DashboardReducer from '../modules/Dashboard/reducer';\nimport CartReducer from '../modules/Cart/reducer';\n\nconst rootReducer = combineReducers({\n    DashboardReducer,\n    CartReducer\n});\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n    createLogger({ collapsed: true })\n];\n\nif (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.devToolsExtension\n\n    if (typeof devToolsExtension === 'function') {\n        enhancers.push(devToolsExtension())\n    }\n}\n\nconst composedEnhancers = compose(\n    applyMiddleware(...middleware),\n    ...enhancers\n)\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composedEnhancers\n)\n\nexport default store;","export default function DashboardReducer(state = {\n  items: [],\n  filteredItems: []\n}, action) {\n  switch (action.type) {\n    case 'LOAD_FOOD_ITEMS':\n      {\n        return Object.assign({}, state, {items: action.payload});\n      }\n    case 'FILTER_ITEMS':\n      {\n        return Object.assign({}, state, { filteredItems: action.payload });\n      }\n    default:\n      return state;\n  }\n}\n","export default function CartReducer(state = {\n  selection: []\n}, action) {\n  switch (action.type) {\n    case 'ADD_ITEMS':\n      {\n        return Object.assign({}, state, { selection: action.payload});\n      }\n    case 'REMOVE_ITEMS': \n      {\n        return Object.assign({}, state, { selection: action.payload });        \n      }\n    case 'CHECKOUT_AND_RESET_SELECTION':\n      {\n        return Object.assign({}, state, { selection: [] });\n      }\n    default:\n      return state;\n  }\n}\n","import 'bootstrap/dist/css/bootstrap-theme.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './assets/app.css';\nimport './assets/cards.css';\nimport registerServiceWorker from './registerServiceWorker';\nimport Routes from './shared/routes.js';\nimport store from './shared/store.js';\n\nwindow._app_container = document.getElementById('root');\n\n//  wrap whole app in Provider so every component has access to the store\nrender(\n    <Provider store={store}>\n        <BrowserRouter>\n            <div className=\"fluidContainer\">\n                <Routes />\n            </div>\n        </BrowserRouter>\n    </Provider>,\n    window._app_container\n);\nregisterServiceWorker();\n"],"sourceRoot":""}